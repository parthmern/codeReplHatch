apiVersion: apps/v1
kind: Deployment
metadata:
  name: userpod-deployment
  labels:
    app: userpod
spec:
  replicas: 1
  selector:
    matchLabels:
      app: userpod
  template:
    metadata:
      labels:
        app: userpod
    spec:
      volumes:
        - name: workspace-vol
          emptyDir: {}
      containers:
        - name: runner-code
          image: pptl8685/runnerservice:latest
          ports:
            - containerPort: 4000 # ws runner service port
            - containerPort: 4001 # user's nodejs app port
          volumeMounts:
            - mountPath: /workspace
              name: workspace-vol
      initContainers:
        - name: aws-cli-to-copy-s3
          image: amazon/aws-cli:2.22.30
          command: ["/bin/sh", "-c"]
          args:
            - |
              echo "Starting S3 download..." &&
              aws --version &&
              aws --endpoint-url https://tor1.digitaloceanspaces.com s3 cp s3://parthmern-s3/fddf/ /workspace/  --recursive || true &&
              echo "=== Resources copied from S3 ===" &&
              aws --endpoint-url https://tor1.digitaloceanspaces.com s3 ls s3://parthmern-s3/fddf/ &&
              echo "=== Files inside /workspace/ ===" &&
              find /workspace -ls
          volumeMounts:
            - mountPath: /workspace
              name: workspace-vol
          env:
            - name: AWS_ACCESS_KEY_ID
              value: "DO801VRYECGBCYRYHVHB"
            - name: AWS_SECRET_ACCESS_KEY
              value: "n4GU7SDpkbhohecpaGUnNT+Y9NXNnWvkM+M0Yzh9O3A"

---
apiVersion: v1
kind: Service
metadata:
  name: userpod-service
spec:
  selector:
    app: userpod
  ports:
    - name: userpod-service-wsrunner-port
      protocol: TCP
      targetPort: 4000
      port: 4000
    - name: userpod-service-nodejsapp-port
      protocol: TCP
      targetPort: 4001
      port: 4001
  type: ClusterIP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: web-apps-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  ingressClassName: nginx # that we installed controller
  rules:
    - host: userpod.ingress-nginx.parthmern.store
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: userpod-service
                port:
                  number: 4000
# ----------------- v1 debugging ---------------------------------------------------------------------
# kubectl apply -f manifest.v1.yml
# kubectl get pods - userpod-deployment-86f684fb6c-6p5xx   0/1     PodInitializing   0          5s
# kubectl logs userpod-deployment-86f684fb6c-6p5xx -c aws-cli-to-copy-s3
# kubectl describe pod userpod-deployment-86f684fb6c-6p5xx
# kubectl delete deployment userpod-deployment

# kubectl get services
